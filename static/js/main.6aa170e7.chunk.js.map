{"version":3,"sources":["components/Notification/Notification.module.css","components/Statistics/Statistics.js","components/Feedback/Feedback.js","components/Section/Section.js","components/Notification/Notification.js","App.js","index.js","components/Statistics/Statistics.module.css","components/Feedback/Feedback.module.css"],"names":["module","exports","Statistics","good","neutral","bad","total","positivePercent","className","styles","feedbackBlock","Feedback","options","onLeaveFeedback","map","option","btn","name","toLowerCase","onClick","shortId","generate","Section","title","children","Notification","message","App","state","props","goodInitialValue","neutralInitialValue","badInitialValue","handleChangeOption","event","optionName","target","setState","prevState","this","Math","round","countTotalFeedback","countPositiveFeedbackPercentage","React","Component","defaultProps","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gIACAA,EAAOC,QAAU,CAAC,QAAU,gC,iMCoBbC,MAlBf,YAMI,IAAD,IALDC,YAKC,MALM,EAKN,MAJDC,eAIC,MAJS,EAIT,MAHDC,WAGC,MAHK,EAGL,MAFDC,aAEC,MAFO,EAEP,MADDC,uBACC,MADiB,EACjB,EACD,OACE,sBAAKC,UAAWC,IAAOC,cAAvB,UACE,uCAAUP,KACV,0CAAaC,KACb,sCAASC,KACT,wCAAWC,KACX,oDAAuBC,EAAvB,W,iCCCSI,MAbf,YAAsD,IAAD,IAAjCC,eAAiC,MAAvB,GAAuB,EAAnBC,EAAmB,EAAnBA,gBAChC,OAAOD,EAAQE,KAAI,SAAAC,GAAM,OACvB,wBAEEP,UAAWC,IAAOO,IAClBC,KAAMF,EAAOG,YAAYH,GACzBI,QAASN,EAJX,SAMGE,GALIK,IAAQC,gBCGJC,MATf,YAA4C,IAAD,IAAxBC,aAAwB,MAAhB,GAAgB,EAAZC,EAAY,EAAZA,SAC7B,OACE,gCACE,6BAAKD,IACJC,M,iBCCQC,MAJf,YAAyC,IAAD,IAAhBC,eAAgB,MAAN,GAAM,EACtC,OAAO,oBAAIlB,UAAWC,IAAOiB,QAAtB,SAAgCA,KCInCC,E,4MAOJC,MAAQ,CACNzB,KAAM,EAAK0B,MAAMC,iBACjB1B,QAAS,EAAKyB,MAAME,oBACpB1B,IAAK,EAAKwB,MAAMG,iB,EAElBC,mBAAqB,SAAAC,GACnB,IAAMC,EAAaD,EAAME,OAAOnB,KAChC,EAAKoB,UAAS,SAAAC,GAAS,sBACpBH,EAAaG,EAAUH,GAAc,O,mEAIpB,IAAD,EACYI,KAAKX,MAEpC,OAHmB,EACXzB,KADW,EACLC,QADK,EACIC,M,wDAIU,IAAD,EACDkC,KAAKX,MAA5BzB,EADwB,EACxBA,KAAMC,EADkB,EAClBA,QAASC,EADS,EACTA,IAGvB,OADEmC,KAAKC,MAAOtC,GAAQA,EAAOC,EAAUC,GAAQ,MAAQ,I,+BAG/C,IAAD,EACwBkC,KAAKX,MAA5BzB,EADD,EACCA,KAAMC,EADP,EACOA,QAASC,EADhB,EACgBA,IACvB,OACE,qCACE,cAAC,EAAD,CAASkB,MAAM,wBAAf,SACE,cAAC,EAAD,CACEX,QAAS,CAAC,OAAQ,UAAW,OAC7BC,gBAAiB0B,KAAKN,uBAI1B,cAAC,EAAD,CAASV,MAAM,aAAf,SACGgB,KAAKG,qBACJ,cAAC,EAAD,CACEvC,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOiC,KAAKG,qBACZnC,gBAAiBgC,KAAKI,oCAGxB,cAAC,EAAD,CAAcjB,QAAQ,+B,GAnDhBkB,IAAMC,WAAlBlB,EACGmB,aAAe,CACpBhB,iBAAkB,EAClBC,oBAAqB,EACrBC,gBAAiB,GAuDNL,QC7DfoB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U,kBCR1BnD,EAAOC,QAAU,CAAC,cAAgB,oC,kBCAlCD,EAAOC,QAAU,CAAC,IAAM,yB","file":"static/js/main.6aa170e7.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Notification_message__eciZi\"};","import styles from './Statistics.module.css';\nimport PropTypes from 'prop-types';\n\nfunction Statistics({\n  good = 0,\n  neutral = 0,\n  bad = 0,\n  total = 0,\n  positivePercent = 0,\n}) {\n  return (\n    <div className={styles.feedbackBlock}>\n      <p>Good: {good}</p>\n      <p>Neutral: {neutral}</p>\n      <p>Bad: {bad}</p>\n      <p>Total: {total}</p>\n      <p>Positive feedback: {positivePercent}%</p>\n    </div>\n  );\n}\n\nexport default Statistics;\nStatistics.propTypes = {\n  good: PropTypes.number,\n  neutral: PropTypes.number,\n  bad: PropTypes.number,\n  total: PropTypes.number,\n  positivePercent: PropTypes.number,\n};\n","import styles from './Feedback.module.css';\nimport shortId from 'shortid';\nimport PropTypes from 'prop-types';\n\nfunction Feedback({ options = [], onLeaveFeedback }) {\n  return options.map(option => (\n    <button\n      key={shortId.generate()}\n      className={styles.btn}\n      name={option.toLowerCase(option)}\n      onClick={onLeaveFeedback}\n    >\n      {option}\n    </button>\n  ));\n}\n\nexport default Feedback;\n\nFeedback.propTypes = {\n  options: PropTypes.arrayOf(PropTypes.string),\n  onLeaveFeedback: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\nfunction Section({ title = '', children }) {\n  return (\n    <div>\n      <h1>{title}</h1>\n      {children}\n    </div>\n  );\n}\n\nexport default Section;\n\nSection.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.element,\n};\n","import PropTypes from 'prop-types';\nimport styles from './Notification.module.css';\nfunction Notification({ message = '' }) {\n  return <h1 className={styles.message}>{message}</h1>;\n}\n\nexport default Notification;\n\nNotification.propTypes = {\n  message: PropTypes.string,\n};\n","import './App.css';\nimport React from 'react';\nimport Statistics from './components/Statistics/Statistics';\nimport Feedback from './components/Feedback/Feedback';\nimport Section from './components/Section/Section';\nimport Notification from './components/Notification/Notification';\n\nclass App extends React.Component {\n  static defaultProps = {\n    goodInitialValue: 0,\n    neutralInitialValue: 0,\n    badInitialValue: 0,\n  };\n\n  state = {\n    good: this.props.goodInitialValue,\n    neutral: this.props.neutralInitialValue,\n    bad: this.props.badInitialValue,\n  };\n  handleChangeOption = event => {\n    const optionName = event.target.name;\n    this.setState(prevState => ({\n      [optionName]: prevState[optionName] + 1,\n    }));\n  };\n\n  countTotalFeedback() {\n    const { good, neutral, bad } = this.state;\n    const total = good + neutral + bad;\n    return total;\n  }\n  countPositiveFeedbackPercentage() {\n    const { good, neutral, bad } = this.state;\n    const positivePercent =\n      Math.round((good / (good + neutral + bad)) * 100) || 0;\n    return positivePercent;\n  }\n  render() {\n    const { good, neutral, bad } = this.state;\n    return (\n      <>\n        <Section title='Please leave feedback'>\n          <Feedback\n            options={['Good', 'Neutral', 'Bad']}\n            onLeaveFeedback={this.handleChangeOption}\n          />\n        </Section>\n\n        <Section title='Statistics'>\n          {this.countTotalFeedback() ? (\n            <Statistics\n              good={good}\n              neutral={neutral}\n              bad={bad}\n              total={this.countTotalFeedback()}\n              positivePercent={this.countPositiveFeedbackPercentage()}\n            />\n          ) : (\n            <Notification message='No feedback given' />\n          )}\n        </Section>\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"feedbackBlock\":\"Statistics_feedbackBlock__2CpFA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"Feedback_btn__2l22B\"};"],"sourceRoot":""}